name: deploy

on:
  push:
    branches:
      - main
      - beta
  pull_request:
    branches:
      - main
      - beta
    types:
      - opened
      - reopened
      - synchronize
    paths-ignore:
      - ".github/**"
      - "!.github/workflows/pages.yml"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  BUILD_ARFIFACT_NAME: sushichan-live-dist

jobs:
  build:
    name: Build and Deploy Astro App
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - run: corepack enable pnpm
      - name: Setup Node.js
        uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
        with:
          node-version-file: "package.json"
          cache: pnpm

      - name: Install Dependencies
        run: pnpm install

      - name: Restore cached Astro Assets
        id: restore-astro-assets
        uses: actions/cache/restore@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: |
            .astro-cache
          key: ${{ runner.os }}-astro-assets-${{ hashFiles('.astro-cache/assets/**') }}
          restore-keys: |
            ${{ runner.os }}-astro-assets-

      - name: Build
        run: pnpm run build
        env:
          CLOUDINARY_CLOUD_NAME: ${{secrets.CLOUDINARY_CLOUD_NAME }}
          CLOUDINARY_API_KEY: ${{secrets.CLOUDINARY_API_KEY }}
          CLOUDINARY_API_SECRET: ${{secrets.CLOUDINARY_API_SECRET }}

          SHOW_DRAFT_POST: ${{ github.ref_name != 'main' && github.ref_name != 'beta' }}
          TWEET_API_URL: ${{ secrets.TWEET_API_URL }}

      - name: Cache Astro Assets
        id: cache-astro-assets
        uses: actions/cache/save@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: |
            .astro-cache
          key: ${{ runner.os }}-astro-assets-${{ hashFiles('.astro-cache/assets/**') }}

      - name: Publish to Cloudflare Pages
        uses: cloudflare/wrangler-action@f84a562284fc78278ff9052435d9526f9c718361 # v3.7.0
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy
