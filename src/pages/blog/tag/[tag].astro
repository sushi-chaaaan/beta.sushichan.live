---
import ContentLayout from "@/components/common/ContentLayout.astro";
import AllTags from "@/features/blog/components/AllTags.astro";
import BlogPostCard from "@/features/blog/components/BlogPostCard.astro";
import { getAllTags, getPostsByTags } from "@/features/blog/utils/post";
import BaseSEO from "@/features/meta/BaseSEO.astro";
import BlogLayout from "@/layouts/BlogLayout.astro";
import { fade } from "astro:transitions";

export async function getStaticPaths() {
  const tags = await getAllTags();
  return tags.map((tag) => ({
    params: { tag: decodeURIComponent(tag) },
    props: { tag: decodeURIComponent(tag) },
  }));
}

type Props = {
  tag: string;
};

const { tag } = Astro.props;
const posts = await getPostsByTags([tag], (a, b) => {
  if (a.data.createdAt < b.data.createdAt) return 1;
  if (a.data.createdAt > b.data.createdAt) return -1;
  return 0;
});

const title = `タグ 「${tag}」 の記事 - すしにっき`;
const description = `タグ 「${tag}」 の記事一覧です。`;
---

<BlogLayout>
  <BaseSEO
    description={description}
    disableTitleTemplate
    slot="seo"
    title={title}
  />
  <ContentLayout>
    <div class="my-4 flex flex-col flex-nowrap gap-2">
      <h1
        class="text-2xl font-bold"
        transition:animate={fade({ duration: 1000 })}
      >
        {`タグ 「${tag}」 の記事`}
      </h1>
      <AllTags />
    </div>
    <div class="grid w-full grid-cols-1 justify-stretch gap-4 md:grid-cols-2">
      {posts.map((post) => <BlogPostCard post={post} />)}
    </div>
  </ContentLayout>
</BlogLayout>
