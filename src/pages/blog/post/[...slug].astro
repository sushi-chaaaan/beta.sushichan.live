---
import BlogFrontMatter from "@/components/blog/BlogFrontMatter.astro"
import ContentLayout from "@/components/common/ContentLayout.astro"
import ContentMargin from "@/components/common/ContentMargin.astro"
import BlogPostSEO from "@/components/meta/BlogPostSEO.astro"
import NetabareAlert from "@/components/ui/NetabareAlert.astro"
import BaseLayout from "@/layouts/BaseLayout.astro"
import { getAllPosts } from "@/lib/blogPost"
import type { CollectionEntry } from "astro:content"

export async function getStaticPaths() {
  const blogEntries = await getAllPosts()
  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }))
}

type Props = {
  entry: CollectionEntry<"posts">
}

const { entry } = Astro.props
const { Content } = await entry.render()

const netabareList =
  entry.data.netabare && entry.data.netabare.length > 0
    ? entry.data.netabare
    : []
const includeNetabare = netabareList.length > 0

export const prerender = true
---

<BaseLayout>
  <BlogPostSEO entry={entry} slot="seo" />
  <ContentLayout>
    <ContentMargin asElement="article">
      <BlogFrontMatter entry={entry} />
      <div class="divider"></div>
      {
        includeNetabare ? (
          <NetabareAlert backIfNewTab="/blog" netabareList={netabareList}>
            <Content />
          </NetabareAlert>
        ) : (
          <Content />
        )
      }
    </ContentMargin>
  </ContentLayout>
</BaseLayout>
