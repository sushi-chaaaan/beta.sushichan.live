---
import SafeHTML from "@/components/utils/SafeHTML.astro";
import Iconify from "@iconify/iconify";
import { type VariantProps, tv } from "tailwind-variants";

type Props = {
  as?: "Fragment" | "div" | "span";
  class?: string;
  icon: string;
} & VariantProps<typeof style>;

const { as = "div", class: className, icon, ...props } = Astro.props;

const style = tv({
  base: "aspect-square",
  defaultVariants: {
    size: "md",
  },
  variants: {
    size: {
      "2xl": "size-6",
      "2xs": "size-[10px]",
      "3xl": "size-[30px]",
      "4xl": "size-9",
      "5xl": "size-12",
      "6xl": "size-[60px]",
      "7xl": "size-[72px]",
      "8xl": "size-24",
      "9xl": "size-32",
      "lg": "size-[18px]",
      "md": "size-4",
      "sm": "size-[14px]",
      "xl": "size-5",
      "xs": "size-3",
    },
  },
});

const getIconSvg = async (icon: string) => {
  await Iconify.loadIcon(icon);

  const iconData = Iconify.getIcon(icon);
  if (!iconData) throw new Error(`Icon ${icon} not found`);

  return (
    `<svg xmlns="http://www.w3.org/2000/svg" viewBox="${iconData.left} ${iconData.top} ${iconData.width} ${iconData.height}" fill="none" style="width:100%">` +
    iconData.body +
    "</svg>"
  );
};

const iconHTML = await getIconSvg(icon);
---

<SafeHTML
  __dangerouslyDisableSanitizer
  as={as}
  class:list={[style(props), className && className, "inline-block"]}
  rawHTML={iconHTML}
/>
