---
import Iconify from "@iconify/iconify"
import { tv, type VariantProps } from "tailwind-variants"

import SafeHTML from "@/components/utils/SafeHTML.astro"

type Props = VariantProps<typeof style> & {
  icon: string
  class?: string
  as?: "div" | "span" | "Fragment"
}

const { icon, class: className, as = "div", ...props } = Astro.props

const style = tv({
  base: "aspect-square",
  variants: {
    size: {
      "2xs": "h-[10px] w-[10px]",
      xs: "h-3 w-3",
      sm: "h-[14px] w-[14px]",
      md: "h-4 w-4",
      lg: "h-[18px] w-[18px]",
      xl: "h-5 w-5",
      "2xl": "h-6 w-6",
      "3xl": "h-[30px] w-[30px]",
      "4xl": "h-9 w-9",
      "5xl": "h-12 w-12",
      "6xl": "h-[60px] w-[60px]",
      "7xl": "h-[72px] w-[72px]",
      "8xl": "h-24 w-24",
      "9xl": "h-32 w-32",
    },
  },
  defaultVariants: {
    size: "md",
  },
})

const getIconSvg = async (icon: string) => {
  await Iconify.loadIcon(icon)

  const iconData = Iconify.getIcon(icon)
  if (!iconData) throw new Error(`Icon ${icon} not found`)

  return (
    `<svg xmlns="http://www.w3.org/2000/svg" viewBox="${iconData.left} ${iconData.top} ${iconData.width} ${iconData.height}" fill="none" style="width:100%">` +
    iconData.body +
    "</svg>"
  )
}

const iconHTML = await getIconSvg(icon)
---

<SafeHTML
  as={as}
  class:list={[style(props), className && className, "inline-block"]}
  rawHTML={iconHTML}
  __dangerouslyDisableSanitizer
/>
