---
import type { MarkdownHeading } from "astro"

import Link from "@/components/element/Link.astro"
import { tv } from "tailwind-variants"

type Props = {
  depth: number
  headings: MarkdownHeading[]
}

const { depth, headings } = Astro.props
const matchedHeadings = headings.filter((heading) => heading.depth === depth)

const styles = tv({
  slots: {
    content:
      "flex flex-col flex-nowrap justify-center gap-1 rounded-lg text-lg font-bold",
    root: "flex flex-col gap-4 rounded-lg border border-gray-300 bg-zinc-50 p-4 shadow-sm dark:border-zinc-600 dark:bg-zinc-800",
    title: "text-2xl font-bold",
  },
})()
---

<nav class:list={styles.root()}>
  <p class:list={styles.title()}>目次</p>
  <div class:list={styles.content()}>
    {
      matchedHeadings.map((h, i) => (
        <Fragment>
          <Link
            variants={{
              color: "primary",
              decoration: "none",
              hoverColor: "primary",
            }}
            href={`#${h.slug}`}
          >
            <span>{h.text}</span>
          </Link>
          {i !== matchedHeadings.length - 1 && <div class="divider my-0" />}
        </Fragment>
      ))
    }
  </div>
</nav>
