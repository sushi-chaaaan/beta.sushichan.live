---
import Icon from "@/components/common/Icon.astro"
type Props = {
  backIfNewTab?: string
}
const { backIfNewTab = "/" } = Astro.props
---

<page-alert data-back-to={backIfNewTab}>
  <dialog class="modal modal-bottom sm:modal-middle">
    <div class="modal-box">
      <div class="flex flex-col flex-nowrap gap-y-2">
        <div class="flex flex-row flex-nowrap items-center gap-x-1 text-xl">
          <Icon
            class="text-yellow-400"
            icon="fa6-solid:triangle-exclamation"
            size="xl"
          />
          <span>注意</span>
        </div>
        <h3 class="text-lg font-bold">このページは以下の内容を含みます！</h3>
        <div>
          <slot name="alert-content" />
        </div>
        <div class="modal-action">
          <form method="dialog">
            <div class="flex flex-row flex-nowrap gap-x-4">
              <button class="btn btn-error">閲覧しない</button>
              <button class="btn btn-success">承諾して閲覧する</button>
            </div>
          </form>
        </div>
      </div>
    </div>
  </dialog>
  <div aria-hidden="true" style="display:none" data-content>
    <slot />
  </div>
</page-alert>

<script>
  class PageAlert extends HTMLElement {
    constructor() {
      super()

      const dialog = this.querySelector("dialog")
      const backButton = this.querySelector(".btn-error")
      const acceptButton = this.querySelector(".btn-success")
      const content = this.querySelector("div[data-content]")
      const backTo = this.dataset.backTo ?? "/"

      dialog?.addEventListener("close", () => {
        const returnValue = dialog.returnValue

        if (returnValue === "true") {
          dialog?.remove()
          content?.removeAttribute("aria-hidden")
          content?.removeAttribute("style")
        } else {
          // history.length == 1 は、新しいタブで開いた場合
          history.length == 1 ? (location.href = backTo) : history.back()
        }
      })

      backButton?.addEventListener("click", (e) => {
        e.preventDefault()
        dialog?.close("false")
      })

      acceptButton?.addEventListener("click", (e) => {
        e.preventDefault()
        dialog?.close("true")
      })

      dialog?.showModal()
    }
  }
  customElements.define("page-alert", PageAlert)
</script>
