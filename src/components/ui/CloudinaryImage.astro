---
import { cloudinaryLoader, getCloudinaryImageSize } from "@/lib/cloudinary"
import Image from "@/components/base/Image.astro"
import { declareLet } from "@/utils/declareLet"
import type { HTMLAttributes } from "astro/types"

type ImgProps = Omit<
  HTMLAttributes<"img">,
  "width" | "height" | "src" | "alt" | "quality" | "priority"
>

export type Props = ImgProps & {
  src: string
  alt?: string
  quality?: number
  priority?: boolean
}

const { src, alt, quality = 75, ...props } = Astro.props

const rawSize = await getCloudinaryImageSize(src)
const altIsEmpty = alt === "" || alt === undefined

const size = declareLet(() => {
  const MAX_WIDTH = 960
  let w = rawSize.width
  let h = rawSize.height
  if (w > MAX_WIDTH) {
    h *= MAX_WIDTH / w
    w = MAX_WIDTH
  }
  return { width: w, height: h }
})

const optimizedSrc = cloudinaryLoader({
  src,
  width: size.width,
  quality: quality,
})
---

<Image
  alt={altIsEmpty ? "" : alt}
  height={size.height}
  src={optimizedSrc}
  width={size.width}
  {...props}
/>
