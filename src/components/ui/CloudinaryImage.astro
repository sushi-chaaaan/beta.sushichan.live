---
import type { HTMLAttributes } from "astro/types";

import { cloudinaryLoader, getCloudinaryImageSize } from "../../lib/cloudinary";
import Image from "../element/Image.astro";

type ImgProps = Omit<
  HTMLAttributes<"img">,
  "alt" | "height" | "priority" | "quality" | "src" | "width"
>;

export interface Props extends ImgProps {
  alt?: string;
  priority?: boolean;
  quality?: number;
  src: string;
}

const { alt, quality = 75, src, ...props } = Astro.props;

const rawSize = await getCloudinaryImageSize(src);
const altIsEmpty = alt === "" || alt === undefined;

const size = (() => {
  const MAX_WIDTH = 840;
  let w = rawSize.width;
  let h = rawSize.height;
  if (w > MAX_WIDTH) {
    h *= MAX_WIDTH / w;
    w = MAX_WIDTH;
  }
  return { height: h, width: w };
})();

const optimizedSrc = cloudinaryLoader({
  quality: quality,
  src,
  width: size.width,
});
---

<Image
  alt={altIsEmpty ? "" : alt}
  height={size.height}
  src={optimizedSrc}
  width={size.width}
  {...props}
/>
