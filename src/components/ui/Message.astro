---
import type { RequiredKey } from "@/utils/@types/requiredKey"

import BudouX from "@/components/common/BudouX.astro"
import Fa6SolidCircleExclamation from "~icons/fa6-solid/circle-exclamation"
import Fa6SolidCircleInfo from "~icons/fa6-solid/circle-info"
import Fa6SolidTriangleExclamation from "~icons/fa6-solid/triangle-exclamation"
import { type VariantProps, tv } from "tailwind-variants"
export type Props = RequiredKey<VariantProps<typeof styles>, "type">
const { type } = Astro.props

const styles = tv({
  slots: {
    icon: "",
    innerWrapper: "flex flex-col flex-nowrap items-start gap-2",
    wrapper: "mx-auto w-full border-l-4 px-4 py-2",
  },
  variants: {
    type: {
      alert: {
        icon: "text-red-500",
        wrapper: "border-red-500",
      },
      info: {
        icon: "text-blue-500",
        wrapper: "border-blue-500",
      },
      warn: {
        icon: "text-amber-500",
        wrapper: "border-amber-500",
      },
    },
  },
})
const css = styles()
---

<aside class:list={css.wrapper({ type })}>
  <div class:list={css.innerWrapper()}>
    {
      type === "info" ? (
        <Fa6SolidCircleInfo class:list={css.icon({ type })} />
      ) : type === "alert" ? (
        <Fa6SolidCircleExclamation class:list={css.icon({ type })} />
      ) : (
        <Fa6SolidTriangleExclamation class:list={css.icon({ type })} />
      )
    }
    <BudouX>
      <slot />
    </BudouX>
  </div>
</aside>
