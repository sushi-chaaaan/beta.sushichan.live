---
import type { CollectionEntry } from "astro:content"

import { cloudinaryOGPLoader } from "@/lib/cloudinary"
import { dtTool } from "@/lib/date"
import { SEO } from "astro-seo"

type Props = {
  entry: CollectionEntry<"posts">
  isPreview?: boolean
}

const {
  entry: { data },
  isPreview = false,
} = Astro.props

const createdAt = dtTool.replaceTzWithJst(data.createdAt).toISOString()
const updatedAt = data.updatedAt
  ? dtTool.replaceTzWithJst(data.updatedAt).toISOString()
  : undefined

const optimizedOGPImage = cloudinaryOGPLoader(data.thumbnail)
---

<SEO
  openGraph={{
    article: {
      modifiedTime: updatedAt,
      publishedTime: createdAt,
      tags: data.tags,
    },
    basic: {
      image: optimizedOGPImage,
      title: data.title,
      type: "article",
    },
    image: {
      alt: data.title,
      height: 630,
      url: optimizedOGPImage,
      width: 1200,
    },
    optional: {
      description: data.description,
      locale: "ja_JP",
      siteName: "すしにっき",
    },
  }}
  twitter={{
    card: "summary_large_image",
    creator: "@sushichan_044",
    description: data.description,
    image: optimizedOGPImage,
    title: data.title,
  }}
  description={data.description}
  title={data.title}
  titleDefault="すしにっき"
  titleTemplate="%s - すしにっき"
  {...isPreview && {
    nofollow: true,
    noindex: true,
  }}
/>
